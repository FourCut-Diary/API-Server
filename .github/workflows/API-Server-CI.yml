# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI workflow

on:
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
    - name: checkout
      uses: actions/checkout@v3
    
    # 2) JDK 11버전 설치, 다른 JDK 버전을 사용하다면 수정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # 3) 환경변수 파일 생성
    - name: make application.yml 파일 생성
      run: |
        touch ./module-api/src/main/resources/application.yml
        echo "${{ secrets.FOURCUTDIARY_APPLICATION }}" >> ./module-api/src/main/resources/application.yml
        
        touch ./module-notification/src/main/resources/application.yml
        echo "${{ secrets.FOURCUTDIARY_APPLICATION }}" >> ./module-notification/src/main/resources/application.yml

        touch ./module-notification/src/test/resources/application-local.yml
        echo "${{ secrets.FOURCUTDIARY_APPLICATION }}" >> ./module-notification/src/test/resources/application-local.yml

      shell: bash
        
    # 이 워크플로우는 gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
      run: ./gradlew build
